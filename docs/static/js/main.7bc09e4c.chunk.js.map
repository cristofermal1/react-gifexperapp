{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropType","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFechGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SAGI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAvBc,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,aA2BhCZ,EAAYe,UAAY,CACpBd,cAAee,IAASC,KAAKC,Y,mCCnCnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcjBM,GAdiB,4CAAH,sDCDRO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEnC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,kCAAMA,EAAN,WCAEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECLuB,SAAEA,GAC1B,MAA0BlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbDC,qBAAW,WACRxB,EAASC,GACRwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGjB,CAAEpB,IAKGqB,EDdyBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAWpB,OACI,qCACA,mCAAOpB,EAAP,OACMoB,GAAW,wCAER,qBAAKJ,UAAU,8CAAf,SAEGH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,cAAC,EAAD,eAEKA,GADAA,EAAIC,aE3BpBgB,EAAe,WAGxB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KASA,OACI,8BACG,qCACK,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEIA,SAAUA,GADFA,c,MCpBxC6B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7bc09e4c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropType from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n\r\n    const handleInputChange = ( e ) => {\r\n\r\n        setInputValue( e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategorias( cats  => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n\r\n            \r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.prototype = {\r\n    setCategorias: PropType.func.isRequired\r\n}\r\n","\r\n\r\n\r\n export const getGifs = async (category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=QsYerXCuHx5ydrvgw8RSIXATl3FDGXv0`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\nreturn gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n           <img src={ url } alt= { title }/>\r\n           <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState , useEffect} from 'react'\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\n\r\n\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n     \r\n    const {data:images, loading} = useFechGifs( category );\r\n\r\n    \r\n\r\n\r\n    //const [images, setimages] = useState([]);\r\n    \r\n    /**/\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n        <h3> { category } </h3>\r\n             {loading && <p>loading</p> }\r\n             \r\n                 <div className=\"card-grid animate__animated animate__bounce\">\r\n                 {\r\n                    images.map( img => (\r\n                        \r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }\r\n                        />\r\n                    ))\r\n                 }\r\n                      \r\n                      \r\n              </div>\r\n             \r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useState, useEffect  } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\n\r\nexport const useFechGifs = ( category ) => {\r\n   const [state, setState] = useState({\r\n       data:[],\r\n       loading: true\r\n   });\r\n\r\n  useEffect( () => {\r\n     getGifs( category )\r\n     .then( imgs => {\r\n         setState({\r\n             data: imgs,\r\n             loading: false\r\n         })\r\n     })\r\n  }, [ category ])\r\n\r\n   \r\n   \r\n\r\n   return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   // const categorias = ['One Punch', 'Dragon Ball' , 'Samurai X']\r\n    const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    /*const handleAdd = () => {\r\n\r\n        setCategorias( [...categorias, 'HunterxHunter'] )\r\n\r\n    }*/\r\n\r\n\r\n    return (\r\n        <div>\r\n           <>\r\n                <h2>GifExpertApp</h2>\r\n                <hr />\r\n                <AddCategory setCategorias= { setCategorias } />\r\n                <ol>\r\n                    { \r\n                        categorias.map( category => (\r\n\r\n                            <GifGrid \r\n                                key = { category }\r\n                                category={category} />\r\n                        ))\r\n                    }\r\n                </ol>\r\n           </> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}